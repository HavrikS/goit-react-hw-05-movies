{"version":3,"file":"static/js/748.31197635.chunk.js","mappings":"yOAuDA,UAnDgB,WAEZ,OAA8BA,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAyBJ,EAAAA,EAAAA,UAAS,IAAlC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAAwCN,EAAAA,EAAAA,UAAS,IAAjD,eAAOO,EAAP,KAAqBC,EAArB,KACA,GAAwCR,EAAAA,EAAAA,WAAS,GAAjD,eAAOS,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkCR,OAhCAE,EAAAA,EAAAA,YAAU,WACV,IAAMC,EAAY,mCAAG,sGAETZ,GAAW,GAFF,UAGca,EAAAA,EAAAA,IAAWJ,GAHzB,OAGHK,EAHG,OAIHC,EAASD,EAASE,QACxBZ,GAAQ,OAAIW,IACZP,GAAgB,GANP,kDAQTN,EAAS,EAAD,IARC,yBAWTF,GAAW,GAXF,6EAAH,qDAedY,GACH,GAAE,CAACH,KAEJE,EAAAA,EAAAA,YAAU,WACV,GAAqB,IAAjBR,EAAMc,OAAV,CACI,IAAMC,EAAWf,EAAMgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,eAAhB,OAAqC,2BAC5D,qCAAaA,EAAeC,aAChC,uBAAIF,MAFqED,EAA9C,IAI3Bd,EAAgBY,EAGnB,CACA,GAAE,CAACf,KAIA,2BACKE,EAAaY,OAAS,GAAI,wBAAKZ,IAAqBE,IAAgB,qEACpER,IAAW,+CACXE,IAAS,wDAGrB,C,4MClDYuB,EAAiB,mCAAG,sGACRC,IAAAA,IAAA,0FADQ,uBACtBC,EADsB,EACtBA,KADsB,kBAGtBA,GAHsB,2CAAH,qDAMjBC,EAAe,mCAAG,WAAMC,GAAN,yFACNH,IAAAA,IAAA,kHAAqHG,EAArH,gCADM,uBACpBF,EADoB,EACpBA,KADoB,kBAGpBA,GAHoB,2CAAH,sDAMfG,EAAY,mCAAG,WAAMT,GAAN,yFACHK,IAAAA,IAAA,6CAAgDL,EAAhD,6DADG,uBACjBM,EADiB,EACjBA,KADiB,kBAGjBA,GAHiB,2CAAH,sDAOZI,EAAO,mCAAG,WAAMV,GAAN,yFACEK,IAAAA,IAAA,6CAAgDL,EAAhD,qEADF,uBACZM,EADY,EACZA,KADY,kBAGZA,GAHY,2CAAH,sDAMPb,EAAU,mCAAG,WAAOO,GAAP,yFACCK,IAAAA,IAAA,6CAAgDL,EAAhD,4EADD,uBACdM,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAH,qD,iFCxBR,SAASK,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,EAClD,CDES,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["pages/ReviewsPage/ReviewsPage.jsx","shared/api/movies.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import {useState, useEffect} from \"react\";\nimport { getReviews } from '../../shared/api/movies';\nimport {useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [items, setItem] = useState([]);\n    const [reviewsItems, setReviewsItems] = useState([]);\n    const [reviewsTitle, setReviewstitle] = useState(false);\n\n    const { movieId } = useParams();\n\n    useEffect(() => { \n    const fetchReviews = async () => {\n            try {\n                setLoading(true)                \n                const response = await getReviews(movieId);\n                const result = response.results;                \n                setItem([...result])\n                setReviewstitle(true)\n            } catch (error) {\n                setError(error)\n            }\n            finally {\n                setLoading(false)\n            }\n    };\n    \n        fetchReviews()\n    }, [movieId]);\n\n    useEffect(() => { \n    if (items.length !== 0){\n        const elements = items.map(({ id, content, author_details }) => <li key={id}>\n            <h4>Author: {author_details.username}</h4>\n        <p>{content}</p>        \n    </li>)\n        setReviewsItems(elements)\n    } else {\n        return\n    }\n    }, [items]); \n    \n\n    return (\n        <div>\n            {reviewsItems.length > 0 ? <ul>{reviewsItems}</ul> : reviewsTitle && <p>We don`t have any reviews for this movie.</p>}            \n            {loading && <p>...load information</p>}\n            {error && <p>...Information load failed</p>}\n        </div>\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\n\nexport const getTrendingMovies = async() => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=d320fda9f0a654278233a1e86d74d04d`);\n\n    return data;\n}\n\nexport const getMoviesByName = async(name) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US&query=${name}&page=1&include_adult=false`);\n\n    return data;\n}\n\nexport const getMovieById = async(id) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US`);\n\n    return data;\n}\n\n\nexport const getCast = async(id) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US`);\n\n    return data;\n}\n\nexport const getReviews = async (id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US&page=1`);\n\n    return data;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","loading","setLoading","error","setError","items","setItem","reviewsItems","setReviewsItems","reviewsTitle","setReviewstitle","movieId","useParams","useEffect","fetchReviews","getReviews","response","result","results","length","elements","map","id","content","author_details","username","getTrendingMovies","axios","data","getMoviesByName","name","getMovieById","getCast","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}