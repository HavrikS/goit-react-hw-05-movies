{"version":3,"file":"static/js/667.266c60b6.chunk.js","mappings":"kPAwFA,UAhFmB,WAEf,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA0BN,EAAAA,EAAAA,UAAS,IAAnC,eAAOO,EAAP,KAAcC,EAAd,KAEMC,GAAUC,EAAAA,EAAAA,UAChB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACN,GAAIF,EAAJ,CACI,IAAMG,EAAiB,mCAAG,sGAEtBb,GAAW,GAFW,UAGCc,EAAAA,EAAAA,IAAgBJ,GAHjB,OAGhBK,EAHgB,OAIhBC,EAASD,EAASE,QACxBb,GAAS,OAAIY,IALS,gDAOtBd,EAAS,EAAD,IAPc,yBAUtBF,GAAW,GAVW,4EAAH,qDAc3Ba,GAGC,CACJ,GAAE,CAACH,IAEJ,IAUMQ,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAIZ,IAAMI,EAAWnB,EAAMoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,cAAd,OAAkC,yBACzD,SAAC,KAAD,CAAOC,GAAE,kBAAaH,GAAtB,SAA6BC,GAASC,KAD4BF,EAA3C,IAK3B,OACA,iCACA,kBAAOI,SAlBc,SAAAC,GACjBA,EAAMC,iBACNrB,EAAgB,CAACC,MAAOb,IACxBC,EAAa,GAChB,EAcD,WAEI,kBACAiC,KAAK,OACLC,KAAK,aACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOvC,EACPwC,IAAKhC,EACLiC,SAhCiB,WACjBxC,EAAaO,EAAQkC,QAAQH,MACpC,KAgCO,mBAAQL,KAAK,SAAb,UACQ,2CAGR,4BACI,wBAAKT,IACJvB,IAAW,0CACXE,IAAS,sDAIrB,C,4MCnFYuC,EAAiB,mCAAG,sGACRC,IAAAA,IAAA,0FADQ,uBACtBC,EADsB,EACtBA,KADsB,kBAGtBA,GAHsB,2CAAH,qDAMjB5B,EAAe,mCAAG,WAAMkB,GAAN,yFACNS,IAAAA,IAAA,kHAAqHT,EAArH,gCADM,uBACpBU,EADoB,EACpBA,KADoB,kBAGpBA,GAHoB,2CAAH,sDAMfC,EAAY,mCAAG,WAAMnB,GAAN,yFACHiB,IAAAA,IAAA,6CAAgDjB,EAAhD,6DADG,uBACjBkB,EADiB,EACjBA,KADiB,kBAGjBA,GAHiB,2CAAH,sDAOZE,EAAO,mCAAG,WAAMpB,GAAN,yFACEiB,IAAAA,IAAA,6CAAgDjB,EAAhD,qEADF,uBACZkB,EADY,EACZA,KADY,kBAGZA,GAHY,2CAAH,sDAMPG,EAAU,mCAAG,WAAOrB,GAAP,yFACCiB,IAAAA,IAAA,6CAAgDjB,EAAhD,4EADD,uBACdkB,EADc,EACdA,KADc,kBAGfA,GAHe,2CAAH,qD,iFCxBR,SAASI,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,EAClD,CDES,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["pages/MoviesPage/MoviesPage.jsx","shared/api/movies.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["\nimport { useState, useRef, useEffect } from 'react'\nimport { getMoviesByName } from '../../shared/api/movies';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n\n\n\nconst MoviesPage = () => {\n    \n    const [inputName, setinputName] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [items, setItems] = useState([]);\n\n    const inputEl = useRef();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\")\n    \n    useEffect(() => {\n        if (query) {\n            const fetchMoviesByName = async() => {\n            try {\n                setLoading(true)                \n                const response = await getMoviesByName(query);\n                const result = response.results;                \n                setItems([...result])\n            } catch (error) {\n                setError(error)\n            }\n            finally {\n                setLoading(false)\n            }\n        };\n    \n        fetchMoviesByName();\n        } else {\n            return\n        }\n    }, [query]);\n\n    const handleChange = () => {\n        setinputName(inputEl.current.value);    \n}\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        setSearchParams({query: inputName})    \n        setinputName('')\n    };\n\n    const location = useLocation();\n    console.log(location);\n    //const {from} = location.state\n    \n    \n    const elements = items.map(({ id, title, original_name }) => <li key={id}>        \n        <Link  to={`/movies/${id}`}>{title || original_name}</Link>\n    </li>)\n\n\n    return ( \n    <>\n    <form  onSubmit={handleSubmit}>        \n\n        <input        \n        type=\"text\"\n        name=\"searchName\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={inputName}\n        ref={inputEl}\n        onChange={handleChange}\n        />\n        <button type=\"submit\" >\n                <span >Search</span>\n        </button>\n    </form>\n        <div>\n            <ul>{elements}</ul>\n            {loading && <p>...load movies</p>}\n            {error && <p>...Movies load failed</p>}                \n        </div>\n    </>\n);\n}\n\nexport default MoviesPage;","import axios from \"axios\";\n\n\nexport const getTrendingMovies = async() => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=d320fda9f0a654278233a1e86d74d04d`);\n\n    return data;\n}\n\nexport const getMoviesByName = async(name) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US&query=${name}&page=1&include_adult=false`);\n\n    return data;\n}\n\nexport const getMovieById = async(id) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US`);\n\n    return data;\n}\n\n\nexport const getCast = async(id) => {\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US`);\n\n    return data;\n}\n\nexport const getReviews = async (id) => {\n    const { data } = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=d320fda9f0a654278233a1e86d74d04d&language=en-US&page=1`);\n\n    return data;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["useState","inputName","setinputName","loading","setLoading","error","setError","items","setItems","inputEl","useRef","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMoviesByName","getMoviesByName","response","result","results","location","useLocation","console","log","elements","map","id","title","original_name","to","onSubmit","event","preventDefault","type","name","autoComplete","autoFocus","placeholder","value","ref","onChange","current","getTrendingMovies","axios","data","getMovieById","getCast","getReviews","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}